// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logic.proto

package netproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 错误码
type E_Code int32

const (
	E_Code_E_ERROR                 E_Code = 0
	E_Code_E_OK                    E_Code = 1
	E_Code_E_RELOGIN               E_Code = 2
	E_Code_E_NONE_EXIST            E_Code = 3
	E_Code_E_UNKNOWN               E_Code = 4
	E_Code_E_SERVER_INTERNAL_ERROR E_Code = 5
	E_Code_E_INVALID_PARAM         E_Code = 6
	E_Code_E_INVALID_OPT           E_Code = 7
)

var E_Code_name = map[int32]string{
	0: "E_ERROR",
	1: "E_OK",
	2: "E_RELOGIN",
	3: "E_NONE_EXIST",
	4: "E_UNKNOWN",
	5: "E_SERVER_INTERNAL_ERROR",
	6: "E_INVALID_PARAM",
	7: "E_INVALID_OPT",
}
var E_Code_value = map[string]int32{
	"E_ERROR":                 0,
	"E_OK":                    1,
	"E_RELOGIN":               2,
	"E_NONE_EXIST":            3,
	"E_UNKNOWN":               4,
	"E_SERVER_INTERNAL_ERROR": 5,
	"E_INVALID_PARAM":         6,
	"E_INVALID_OPT":           7,
}

func (x E_Code) String() string {
	return proto.EnumName(E_Code_name, int32(x))
}
func (E_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{0}
}

type EMsgIds int32

const (
	EMsgIds_ECS_None             EMsgIds = 0
	EMsgIds_ECS_TestSyncBaseInfo EMsgIds = 90
	EMsgIds_ESC_TestSyncBaseInfo EMsgIds = 91
	EMsgIds_ECS_Login            EMsgIds = 101
	EMsgIds_ESC_Login            EMsgIds = 103
	EMsgIds_ECS_Tick             EMsgIds = 104
	EMsgIds_ESC_Tick             EMsgIds = 105
	EMsgIds_ECS_P2P              EMsgIds = 106
	EMsgIds_ESC_P2P              EMsgIds = 107
	EMsgIds_ECS_GuideDonate      EMsgIds = 108
)

var EMsgIds_name = map[int32]string{
	0:   "ECS_None",
	90:  "ECS_TestSyncBaseInfo",
	91:  "ESC_TestSyncBaseInfo",
	101: "ECS_Login",
	103: "ESC_Login",
	104: "ECS_Tick",
	105: "ESC_Tick",
	106: "ECS_P2P",
	107: "ESC_P2P",
	108: "ECS_GuideDonate",
}
var EMsgIds_value = map[string]int32{
	"ECS_None":             0,
	"ECS_TestSyncBaseInfo": 90,
	"ESC_TestSyncBaseInfo": 91,
	"ECS_Login":            101,
	"ESC_Login":            103,
	"ECS_Tick":             104,
	"ESC_Tick":             105,
	"ECS_P2P":              106,
	"ESC_P2P":              107,
	"ECS_GuideDonate":      108,
}

func (x EMsgIds) String() string {
	return proto.EnumName(EMsgIds_name, int32(x))
}
func (EMsgIds) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{1}
}

type CS_TestSyncBaseInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_TestSyncBaseInfo) Reset()         { *m = CS_TestSyncBaseInfo{} }
func (m *CS_TestSyncBaseInfo) String() string { return proto.CompactTextString(m) }
func (*CS_TestSyncBaseInfo) ProtoMessage()    {}
func (*CS_TestSyncBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{0}
}
func (m *CS_TestSyncBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_TestSyncBaseInfo.Unmarshal(m, b)
}
func (m *CS_TestSyncBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_TestSyncBaseInfo.Marshal(b, m, deterministic)
}
func (dst *CS_TestSyncBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_TestSyncBaseInfo.Merge(dst, src)
}
func (m *CS_TestSyncBaseInfo) XXX_Size() int {
	return xxx_messageInfo_CS_TestSyncBaseInfo.Size(m)
}
func (m *CS_TestSyncBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_TestSyncBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CS_TestSyncBaseInfo proto.InternalMessageInfo

type SC_TestSyncBaseInfo struct {
	Code                 E_Code   `protobuf:"varint,1,opt,name=code,enum=netproto.E_Code" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_TestSyncBaseInfo) Reset()         { *m = SC_TestSyncBaseInfo{} }
func (m *SC_TestSyncBaseInfo) String() string { return proto.CompactTextString(m) }
func (*SC_TestSyncBaseInfo) ProtoMessage()    {}
func (*SC_TestSyncBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{1}
}
func (m *SC_TestSyncBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_TestSyncBaseInfo.Unmarshal(m, b)
}
func (m *SC_TestSyncBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_TestSyncBaseInfo.Marshal(b, m, deterministic)
}
func (dst *SC_TestSyncBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_TestSyncBaseInfo.Merge(dst, src)
}
func (m *SC_TestSyncBaseInfo) XXX_Size() int {
	return xxx_messageInfo_SC_TestSyncBaseInfo.Size(m)
}
func (m *SC_TestSyncBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_TestSyncBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SC_TestSyncBaseInfo proto.InternalMessageInfo

func (m *SC_TestSyncBaseInfo) GetCode() E_Code {
	if m != nil {
		return m.Code
	}
	return E_Code_E_ERROR
}

type CS_Tick struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_Tick) Reset()         { *m = CS_Tick{} }
func (m *CS_Tick) String() string { return proto.CompactTextString(m) }
func (*CS_Tick) ProtoMessage()    {}
func (*CS_Tick) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{2}
}
func (m *CS_Tick) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_Tick.Unmarshal(m, b)
}
func (m *CS_Tick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_Tick.Marshal(b, m, deterministic)
}
func (dst *CS_Tick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_Tick.Merge(dst, src)
}
func (m *CS_Tick) XXX_Size() int {
	return xxx_messageInfo_CS_Tick.Size(m)
}
func (m *CS_Tick) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_Tick.DiscardUnknown(m)
}

var xxx_messageInfo_CS_Tick proto.InternalMessageInfo

type SC_Tick struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_Tick) Reset()         { *m = SC_Tick{} }
func (m *SC_Tick) String() string { return proto.CompactTextString(m) }
func (*SC_Tick) ProtoMessage()    {}
func (*SC_Tick) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{3}
}
func (m *SC_Tick) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_Tick.Unmarshal(m, b)
}
func (m *SC_Tick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_Tick.Marshal(b, m, deterministic)
}
func (dst *SC_Tick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_Tick.Merge(dst, src)
}
func (m *SC_Tick) XXX_Size() int {
	return xxx_messageInfo_SC_Tick.Size(m)
}
func (m *SC_Tick) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_Tick.DiscardUnknown(m)
}

var xxx_messageInfo_SC_Tick proto.InternalMessageInfo

// 登录
type CS_Login struct {
	Token                string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_Login) Reset()         { *m = CS_Login{} }
func (m *CS_Login) String() string { return proto.CompactTextString(m) }
func (*CS_Login) ProtoMessage()    {}
func (*CS_Login) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{4}
}
func (m *CS_Login) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_Login.Unmarshal(m, b)
}
func (m *CS_Login) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_Login.Marshal(b, m, deterministic)
}
func (dst *CS_Login) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_Login.Merge(dst, src)
}
func (m *CS_Login) XXX_Size() int {
	return xxx_messageInfo_CS_Login.Size(m)
}
func (m *CS_Login) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_Login.DiscardUnknown(m)
}

var xxx_messageInfo_CS_Login proto.InternalMessageInfo

func (m *CS_Login) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// 登录返回
type SC_Login struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Code                 E_Code   `protobuf:"varint,2,opt,name=code,enum=netproto.E_Code" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_Login) Reset()         { *m = SC_Login{} }
func (m *SC_Login) String() string { return proto.CompactTextString(m) }
func (*SC_Login) ProtoMessage()    {}
func (*SC_Login) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{5}
}
func (m *SC_Login) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_Login.Unmarshal(m, b)
}
func (m *SC_Login) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_Login.Marshal(b, m, deterministic)
}
func (dst *SC_Login) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_Login.Merge(dst, src)
}
func (m *SC_Login) XXX_Size() int {
	return xxx_messageInfo_SC_Login.Size(m)
}
func (m *SC_Login) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_Login.DiscardUnknown(m)
}

var xxx_messageInfo_SC_Login proto.InternalMessageInfo

func (m *SC_Login) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SC_Login) GetCode() E_Code {
	if m != nil {
		return m.Code
	}
	return E_Code_E_ERROR
}

// p2p消息
type CS_P2P struct {
	From                 int64    `protobuf:"varint,1,opt,name=from" json:"from,omitempty"`
	To                   int64    `protobuf:"varint,2,opt,name=to" json:"to,omitempty"`
	Msg                  []byte   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_P2P) Reset()         { *m = CS_P2P{} }
func (m *CS_P2P) String() string { return proto.CompactTextString(m) }
func (*CS_P2P) ProtoMessage()    {}
func (*CS_P2P) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{6}
}
func (m *CS_P2P) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_P2P.Unmarshal(m, b)
}
func (m *CS_P2P) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_P2P.Marshal(b, m, deterministic)
}
func (dst *CS_P2P) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_P2P.Merge(dst, src)
}
func (m *CS_P2P) XXX_Size() int {
	return xxx_messageInfo_CS_P2P.Size(m)
}
func (m *CS_P2P) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_P2P.DiscardUnknown(m)
}

var xxx_messageInfo_CS_P2P proto.InternalMessageInfo

func (m *CS_P2P) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *CS_P2P) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *CS_P2P) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

// p2p消息
type SC_P2P struct {
	From                 int64    `protobuf:"varint,1,opt,name=from" json:"from,omitempty"`
	To                   int64    `protobuf:"varint,2,opt,name=to" json:"to,omitempty"`
	Msg                  []byte   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_P2P) Reset()         { *m = SC_P2P{} }
func (m *SC_P2P) String() string { return proto.CompactTextString(m) }
func (*SC_P2P) ProtoMessage()    {}
func (*SC_P2P) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{7}
}
func (m *SC_P2P) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_P2P.Unmarshal(m, b)
}
func (m *SC_P2P) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_P2P.Marshal(b, m, deterministic)
}
func (dst *SC_P2P) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_P2P.Merge(dst, src)
}
func (m *SC_P2P) XXX_Size() int {
	return xxx_messageInfo_SC_P2P.Size(m)
}
func (m *SC_P2P) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_P2P.DiscardUnknown(m)
}

var xxx_messageInfo_SC_P2P proto.InternalMessageInfo

func (m *SC_P2P) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *SC_P2P) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *SC_P2P) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type CS_GuideDonate struct {
	GuideId              int64    `protobuf:"varint,1,opt,name=guideId" json:"guideId,omitempty"`
	Gold                 int32    `protobuf:"varint,2,opt,name=gold" json:"gold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_GuideDonate) Reset()         { *m = CS_GuideDonate{} }
func (m *CS_GuideDonate) String() string { return proto.CompactTextString(m) }
func (*CS_GuideDonate) ProtoMessage()    {}
func (*CS_GuideDonate) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{8}
}
func (m *CS_GuideDonate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_GuideDonate.Unmarshal(m, b)
}
func (m *CS_GuideDonate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_GuideDonate.Marshal(b, m, deterministic)
}
func (dst *CS_GuideDonate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_GuideDonate.Merge(dst, src)
}
func (m *CS_GuideDonate) XXX_Size() int {
	return xxx_messageInfo_CS_GuideDonate.Size(m)
}
func (m *CS_GuideDonate) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_GuideDonate.DiscardUnknown(m)
}

var xxx_messageInfo_CS_GuideDonate proto.InternalMessageInfo

func (m *CS_GuideDonate) GetGuideId() int64 {
	if m != nil {
		return m.GuideId
	}
	return 0
}

func (m *CS_GuideDonate) GetGold() int32 {
	if m != nil {
		return m.Gold
	}
	return 0
}

type CS_None struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_None) Reset()         { *m = CS_None{} }
func (m *CS_None) String() string { return proto.CompactTextString(m) }
func (*CS_None) ProtoMessage()    {}
func (*CS_None) Descriptor() ([]byte, []int) {
	return fileDescriptor_logic_17407754f03a3e0f, []int{9}
}
func (m *CS_None) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_None.Unmarshal(m, b)
}
func (m *CS_None) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_None.Marshal(b, m, deterministic)
}
func (dst *CS_None) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_None.Merge(dst, src)
}
func (m *CS_None) XXX_Size() int {
	return xxx_messageInfo_CS_None.Size(m)
}
func (m *CS_None) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_None.DiscardUnknown(m)
}

var xxx_messageInfo_CS_None proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CS_TestSyncBaseInfo)(nil), "netproto.CS_TestSyncBaseInfo")
	proto.RegisterType((*SC_TestSyncBaseInfo)(nil), "netproto.SC_TestSyncBaseInfo")
	proto.RegisterType((*CS_Tick)(nil), "netproto.CS_Tick")
	proto.RegisterType((*SC_Tick)(nil), "netproto.SC_Tick")
	proto.RegisterType((*CS_Login)(nil), "netproto.CS_Login")
	proto.RegisterType((*SC_Login)(nil), "netproto.SC_Login")
	proto.RegisterType((*CS_P2P)(nil), "netproto.CS_P2P")
	proto.RegisterType((*SC_P2P)(nil), "netproto.SC_P2P")
	proto.RegisterType((*CS_GuideDonate)(nil), "netproto.CS_GuideDonate")
	proto.RegisterType((*CS_None)(nil), "netproto.CS_None")
	proto.RegisterEnum("netproto.E_Code", E_Code_name, E_Code_value)
	proto.RegisterEnum("netproto.EMsgIds", EMsgIds_name, EMsgIds_value)
}

func init() { proto.RegisterFile("logic.proto", fileDescriptor_logic_17407754f03a3e0f) }

var fileDescriptor_logic_17407754f03a3e0f = []byte{
	// 451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0x4f, 0x6f, 0xd3, 0x4c,
	0x10, 0xc6, 0x6b, 0x3b, 0x89, 0x9d, 0x69, 0x9a, 0x77, 0xde, 0x4d, 0x11, 0x91, 0xb8, 0x44, 0x11,
	0x87, 0xaa, 0x87, 0x1c, 0xca, 0x11, 0x09, 0x11, 0xdc, 0x51, 0x65, 0x35, 0x5d, 0x47, 0xbb, 0xa1,
	0x20, 0x38, 0xac, 0x4a, 0xbc, 0x35, 0x26, 0xa9, 0x17, 0xd5, 0xe6, 0xc0, 0xf7, 0xe0, 0xa3, 0xf0,
	0x01, 0xd1, 0xae, 0x6d, 0x10, 0xa2, 0xe2, 0xc2, 0xed, 0x79, 0xf6, 0xcf, 0x6f, 0x76, 0x76, 0x1e,
	0x38, 0xdc, 0x9b, 0xbc, 0xd8, 0x2e, 0x3e, 0xdf, 0x9b, 0xda, 0xb0, 0xa8, 0xd4, 0xb5, 0x53, 0xf3,
	0x47, 0x30, 0x89, 0xa5, 0xda, 0xe8, 0xaa, 0x96, 0x5f, 0xcb, 0xed, 0xab, 0x9b, 0x4a, 0x27, 0xe5,
	0xad, 0x99, 0x3f, 0x87, 0x89, 0x8c, 0xff, 0x58, 0x66, 0x4f, 0xa1, 0xb7, 0x35, 0x99, 0x9e, 0x7a,
	0x33, 0xef, 0x64, 0x7c, 0x86, 0x8b, 0x0e, 0xb3, 0x20, 0x15, 0x9b, 0x4c, 0x0b, 0xb7, 0x3b, 0x1f,
	0x42, 0x68, 0x99, 0xc5, 0x76, 0x67, 0xa5, 0xe5, 0x58, 0x39, 0x83, 0x28, 0x96, 0x6a, 0x65, 0xf2,
	0xa2, 0x64, 0xc7, 0xd0, 0xaf, 0xcd, 0x4e, 0x97, 0x0e, 0x34, 0x14, 0x8d, 0x99, 0xbf, 0x84, 0x48,
	0xc6, 0xed, 0x89, 0x31, 0xf8, 0x45, 0xe6, 0xb6, 0x03, 0xe1, 0x17, 0xd9, 0xcf, 0xca, 0xfe, 0x5f,
	0x2b, 0xbf, 0x80, 0x41, 0x2c, 0xd5, 0xfa, 0x6c, 0xcd, 0x18, 0xf4, 0x6e, 0xef, 0xcd, 0x5d, 0x4b,
	0x70, 0xda, 0x32, 0x6b, 0xe3, 0x08, 0x81, 0xf0, 0x6b, 0xc3, 0x10, 0x82, 0xbb, 0x2a, 0x9f, 0x06,
	0x33, 0xef, 0x64, 0x24, 0xac, 0xb4, 0xf7, 0x65, 0xfc, 0x4f, 0xf7, 0xc7, 0xb1, 0x54, 0x17, 0x5f,
	0x8a, 0x4c, 0x9f, 0x9b, 0xf2, 0xa6, 0xd6, 0x6c, 0x0a, 0x61, 0x6e, 0x6d, 0xd2, 0x35, 0xd3, 0x59,
	0x5b, 0x21, 0x37, 0xfb, 0xcc, 0xf1, 0xfa, 0xc2, 0xe9, 0xf6, 0xe7, 0xb8, 0x29, 0xf5, 0xe9, 0x37,
	0x0f, 0x06, 0x4d, 0x6f, 0xec, 0x10, 0x42, 0x52, 0x24, 0x44, 0x2a, 0xf0, 0x80, 0x45, 0xd0, 0x23,
	0x95, 0x5e, 0xa2, 0xc7, 0x8e, 0x60, 0x48, 0x4a, 0xd0, 0x2a, 0xbd, 0x48, 0x38, 0xfa, 0x0c, 0x61,
	0x44, 0x8a, 0xa7, 0x9c, 0x14, 0xbd, 0x4d, 0xe4, 0x06, 0x83, 0xe6, 0xc0, 0x6b, 0x7e, 0xc9, 0xd3,
	0x37, 0x1c, 0x7b, 0xec, 0x09, 0x3c, 0x26, 0x25, 0x49, 0x5c, 0x93, 0x50, 0x09, 0xdf, 0x90, 0xe0,
	0xcb, 0x55, 0x8b, 0xed, 0xb3, 0x09, 0xfc, 0x47, 0x2a, 0xe1, 0xd7, 0xcb, 0x55, 0x72, 0xae, 0xd6,
	0x4b, 0xb1, 0xbc, 0xc2, 0x01, 0xfb, 0x1f, 0x8e, 0x7e, 0x2d, 0xa6, 0xeb, 0x0d, 0x86, 0xa7, 0xdf,
	0x3d, 0x08, 0xe9, 0xaa, 0xca, 0x93, 0xac, 0x62, 0x23, 0x88, 0xa8, 0x7d, 0x2e, 0x1e, 0xb0, 0x29,
	0x1c, 0xd3, 0x03, 0x51, 0xc2, 0x77, 0x6e, 0xe7, 0x81, 0x34, 0xe1, 0x7b, 0xf7, 0xc2, 0x2e, 0x14,
	0xa8, 0x9d, 0xed, 0x12, 0x80, 0x79, 0xc7, 0xb7, 0xe9, 0xc1, 0x8f, 0xce, 0xb5, 0x59, 0xc2, 0xc2,
	0xfd, 0x49, 0x33, 0x6a, 0xfc, 0xe4, 0x4c, 0x33, 0x37, 0xdc, 0xb9, 0x4e, 0x7e, 0x1f, 0x02, 0xee,
	0x3f, 0x0c, 0x5c, 0x58, 0x9e, 0xfd, 0x08, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x19, 0xd8, 0xd8, 0x06,
	0x03, 0x00, 0x00,
}
