syntax = "proto2";
package netproto;
 message PlayerDatabaseInfo {
    optional int32 key = 1;
    optional BaseInfo val  = 2;
}
 message PlayerDatavipInfo {
    optional int32 key = 1;
    optional VipInfo val  = 2;
}
 message PlayerDataheroPack {
    optional int32 key = 1;
    optional HeroPack val  = 2;
}
 message PlayerDataequipPack {
    optional int32 key = 1;
    optional EquipPack val  = 2;
}
 message PlayerDataguide {
    optional int32 key = 1;
    optional Guide val  = 2;
}
 message PlayerDatachapter {
    optional int32 key = 1;
    optional Chapter val  = 2;
}
 message PlayerInfoserverTime {
    optional int32 key = 1;
    optional int64 val  = 2;
}
 message PlayerInfoserverName {
    optional int32 key = 1;
    optional string val  = 2;
}
 message BaseInfoid {
    optional int32 key = 1;
    optional int64 val  = 2;
}
 message BaseInfoname {
    optional int32 key = 1;
    optional string val  = 2;
}
 message BaseInfolevel {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message BaseInfoexp {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message BaseInfogold {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message BaseInfohead {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message BaseInfodiamond {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message Guideid {
    optional int32 key = 1;
    optional int64 val  = 2;
}
 message Chapterheros {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message Chapterlevel {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message ChapterprizeCheckTime {
    optional int32 key = 1;
    optional int64 val  = 2;
}
 message ChapterprizeEquip {
    optional int32 key = 1;
    optional Equip val  = 2;
}
 message VipInfolevel {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message VipInfoexp {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message VipInfototalRecharge {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message Heroid {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message Herolevel {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message Herostatus {
    optional int32 key = 1;
    optional int64 val  = 2;
}
 message Heroequips {
    optional int32 key = 1;
    optional Equip val  = 2;
}
 message Heronum {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message HeroPacklimit {
    optional int32 key = 1;
    optional int32 val  = 2;
}
message HeroPackheros {
    optional int32 key = 1;
    optional Hero val  = 2;
}
 message Equipid {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message Equiplevel {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message Equipstatus {
    optional int32 key = 1;
    optional int64 val  = 2;
}
 message Equipnum {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message EquipPacklimit {
    optional int32 key = 1;
    optional int32 val  = 2;
}
message EquipPackequips {
    optional int32 key = 1;
    optional Equip val  = 2;
}
 message DailylastUpdateTime {
    optional int32 key = 1;
    optional int64 val  = 2;
}
 message Dailysign {
    optional int32 key = 1;
    optional bool val  = 2;
}
 message DailytotalSign {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message TestListid {
    optional int32 key = 1;
    optional int64 val  = 2;
}
 message TestListListPrimitiveInt {
    optional int32 key = 1;
    optional int32 val  = 2;
}
 message TestListListPrimitiveStr {
    optional int32 key = 1;
    optional string val  = 2;
}
 message TestListListPrimitiveCom {
    optional int32 key = 1;
    optional PlayerData val  = 2;
}
 message TestMapid {
    optional int32 key = 1;
    optional BaseInfo val  = 2;
}
message TestMapMapPrimitiveIntInt {
    optional int32 key = 1;
    optional int32 val  = 2;
}
message TestMapMapPrimitiveIntStr {
    optional int32 key = 1;
    optional string val  = 2;
}
message TestMapMapPrimitiveStrInt {
    optional string key = 1;
    optional int32 val  = 2;
}
message TestMapMapPrimitiveStrStr {
    optional string key = 1;
    optional string val  = 2;
}
message TestMapMapPrimitiveIntCom {
    optional int32 key = 1;
    optional BaseInfo val  = 2;
}
message TestMapMapPrimitiveStrCom {
    optional string key = 1;
    optional PlayerData val  = 2;
}
message PlayerData {
        optional BaseInfo baseInfo = 1;
        optional VipInfo vipInfo = 2;
        optional HeroPack heroPack = 3;
        optional EquipPack equipPack = 4;
        optional Guide guide = 5;
        optional Chapter chapter = 6;
}
message PlayerInfo {
        optional int64 serverTime = 1;
        optional string serverName = 2;
}
message BaseInfo {
        optional int64 id = 1;
        optional string name = 2;
        optional int32 level = 3;
        optional int32 exp = 4;
        optional int32 gold = 5;
        optional int32 head = 6;
        optional int32 diamond = 7;
}
message Guide {
        optional int64 id = 1;
}
message Chapter {
        repeated Chapterheros heros = 1;
        optional int32 level = 2;
        optional int64 prizeCheckTime = 3;
        repeated ChapterprizeEquip prizeEquip = 5;
}
message VipInfo {
        optional int32 level = 1;
        optional int32 exp = 2;
        optional int32 totalRecharge = 3;
}
message Hero {
        optional int32 id = 1;
        optional int32 level = 2;
        optional int64 status = 3;
        repeated Heroequips equips = 4;
        optional int32 num = 5;
}
message HeroPack {
        optional int32 limit = 1;
        repeated HeroPackheros heros = 2;
}
message Equip {
        optional int32 id = 1;
        optional int32 level = 2;
        optional int64 status = 3;
        optional int32 num = 4;
}
message EquipPack {
        optional int32 limit = 1;
        repeated EquipPackequips equips = 2;
}
message Daily {
        optional int64 lastUpdateTime = 1;
        optional bool sign = 2;
        optional int32 totalSign = 3;
}
message TestList {
        optional int64 id = 7;
        repeated TestListListPrimitiveInt ListPrimitiveInt = 1;
        repeated TestListListPrimitiveStr ListPrimitiveStr = 2;
        repeated TestListListPrimitiveCom ListPrimitiveCom = 3;
}
message TestMap {
        optional BaseInfo id = 7;
        repeated TestMapMapPrimitiveIntInt MapPrimitiveIntInt = 1;
        repeated TestMapMapPrimitiveIntStr MapPrimitiveIntStr = 2;
        repeated TestMapMapPrimitiveStrInt MapPrimitiveStrInt = 3;
        repeated TestMapMapPrimitiveStrStr MapPrimitiveStrStr = 4;
        repeated TestMapMapPrimitiveIntCom MapPrimitiveIntCom = 5;
        repeated TestMapMapPrimitiveStrCom MapPrimitiveStrCom = 6;
}
